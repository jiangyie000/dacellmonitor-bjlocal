<?xml version="1.0" encoding="GB2312"?>

<!--
全局默认配置信息
-->
<defaults>
  <!--中心的类型和实现类的对应关系-->
  <center>
    <!--
    <property name="BillId:KeyNum" value="example.center.BillIdCenterImpl"/>
    -->
  </center>
  
  <!--默认代理调用方式.默认采用pojo的模式进行调用，采用的实现类为配置的实现类-->
  <proxy invoke="pojo" type="primitive">
    <clazz name="com.ai.appframe2.complex.service.impl.LocalServiceInvokeImpl"/>
  </proxy>
  
  <!--默认事务信息.默认采用Required的方式进行事务操作，采用的实现类为配置的实现类-->
  <transaction type="Required">
    <clazz name="com.ai.appframe2.complex.transaction.impl.LocalMutilTransactionImpl"/>
    <!--映射每个服务模块对应的事务数据源，可以具体到类名-->
    <mapping>
      <!--平台自带-->
      <property name="com.ai.appframe2.complex.self.service.base" value="base"/>
      <property name="com.ai.appframe2.complex.self.service.check" value="base"/>
      <!--secframe-->
      <property name="com.ai.secframe" value="sec"/>
      <property name="com.ai.frame" value="sec"/>
      <property name="com.asiainfo.appframe.ext.exeframe" value="base"/>
      <property name="example.customer" value="base"/>
      <property name="example" value="base"/>
      <property name="test" value="base"/>
      <property name="example.customer" value="base"/>
      <property name="com.asiainfo.portalframe" value="base"/>
      <property name="com.asiainfo.crm" value="base"/>
      <property name="example.jta.service" value="jta"/>
      <!-- 服务调用日志入库Service -->
      <property name="com.asiainfo.openplatform.srvctl.log.services" value="aioplog"/>
    </mapping>
  </transaction>
  <!--默认数据源信息-->
  <datasource>
    <clazz name="com.ai.appframe2.complex.datasource.impl.LocalMutilDataSourceImpl">
    </clazz>
    <pool name="base" primary="true">
	   <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
       <property name="url" value="jdbc:oracle:thin:@10.7.5.74:1521:ncrmdb"/>
       <property name="username" value="base_aiop"/>
       <property name="password" value="Ab123456"/>
	   <property name="initialSize" value="0"/>
	   <property name="maxActive" value="2"/>
	   <property name="maxIdle" value="2"/> 
    </pool>
    <pool name="aioplog" init="true" >
            <property name="initialSize" value="0"/>
            <property name="maxActive" value="8"/>
            <property name="maxIdle" value="8"/>
            <!--连接泄漏检查,180秒后回收物理数据库连接到数据库中-->
            <property name="removeAbandoned" value="true"/>
            <property name="removeAbandonedTimeout" value="180"/>
            <property name="logAbandoned" value="true"/>

            <!--连接池有效性检查-->
            <property name="validationQuery" value="select 1 from dual"/>
            <property name="validationQueryTimeout" value="3"/>
            <property name="testWhileIdle" value="true"/>
            <property name="testOnBorrow" value="false"/>
            <property name="testOnReturn" value="false"/>
            <!--最多20秒检查到连接失效-->
            <property name="timeBetweenEvictionRunsMillis" value="30000"/>
            <property name="numTestsPerEvictionRun" value="2"/>

        </pool>
    
    
    <!--映射每个DAO模块对应的操作数据源-->
    <mapping>
      <!--平台自带-->
      <property name="com.ai.appframe2.complex.self" value="base"/>
      <property name="com.ai.appframe2.complex.self" value="base"/>
      <!--secframe-->
      <property name="example" value="base"/>
      <property name="example.customer" value="base"/>
      <property name="test" value="base"/>
      <!-- aiportal -->
      <property name="com.asiainfo.appframe.ext.exeframe.msg" value="base"/>
      <property name="com.asiainfo.portalframe" value="base"/>
      <property name="com.asiainfo.crm" value="base"/>
      <property name="com.ai.appframe2.complex.tab" value="base"/>
      <property name="example.jta.service" value="jta"/>
       
       <!-- 服务调用日志入库DAO -->
        <property name="com.asiainfo.openplatform.srvctl.log.dao" value="aioplog"/>
       
    </mapping>
  </datasource>
  <!--包含的服务配置文件-->
  <!--权限-->
  <include type="sv" classpath="system/service/appframe-service.xml"/>
</defaults>
